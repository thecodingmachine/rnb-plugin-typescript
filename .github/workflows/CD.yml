name: CD workflow to NPM publish

on:
  release:
    types: [published]

jobs:
  publish:
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          git config --global user.name "JeremyDolle"
          git config --global user.email "jeremy.dolle34@gmail.com"
          npm --no-git-tag-version version ${{ github.event.release.tag_name }}
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - name: Commit and push
        run: |
          git add .
          git commit -am "üè∑Ô∏è(version) Update boilerplate to version ${{ github.event.release.tag_name }}"
          git push
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  publish-candidate:
    if: "github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: |
          git config --global user.name "JeremyDolle"
          git config --global user.email "jeremy.dolle34@gmail.com"
          npm --no-git-tag-version version ${{ github.event.release.tag_name }}
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
      - name: Commit and push
        run: |
          git add .
          git commit -am "üè∑Ô∏è(version) Update boilerplate to rc version ${{ github.event.release.tag_name }}"
          git push
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
